# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

priority 1

snippet models "Django models file" b
# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models
from django.utils.encoding import python_2_unicode_compatible


@python_2_unicode_compatible
class ${1:ModelName}(models.Model):

	class Meta:
		pass

	def __str__(self):
		pass

	@models.permalink
	def get_absolute_url(self):
		pass
endsnippet

snippet model "Django model" b
@python_2_unicode_compatible
class ${1:ModelName}(models.Model):

	class Meta:
		pass

	def __str__(self):
		pass

	@models.permalink
	def get_absolute_url(self):
		pass
endsnippet

snippet urls "Django urls.py" b
# -*- coding: utf-8 -*-
from django.conf.urls import url

urlpatterns = [
	url(r'${1}', _view_, name=''),
]
endsnippet

snippet tests "Django tests.py" b
# -*- coding: UTF-8 -*-
from __future__ import unicode_literals

from django.test import TestCase


class ${1:Tests}(TestCase):

	def setUp(self):
		pass

	def tearDown(self):
		pass

	def test_test(self):
		pass
endsnippet

snippet "pr(i|in|int)?" "print" br
print(${1})
endsnippet
