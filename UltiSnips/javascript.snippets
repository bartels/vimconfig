# Javascript snippets

# ES2015
snippet "c(onst)?" "const" br
const ${1} = ${2}
endsnippet

snippet "l(et)?" "let" br
let ${1} = ${2}
endsnippet

snippet "i(mport|mp|m)?" "import" br
import ${1} from '${2:$1}'
endsnippet

snippet "e(xport|xp|x)?" "export" br
export ${1:default }
endsnippet

snippet "\.(map|filter|forEach|reduce|find|findIndex)" "Array method with an arrow function" r
.`!p snip.rv = match.group(1)`(${1:(c, i)} => (
	$2
))
endsnippet

snippet "\.(map|filter|forEach|reduce|find|findIndex)=" "Array method with an arrow function inline" rA
.`!p snip.rv = match.group(1)`(${1:(c, i)} => $2)
endsnippet

snippet cl "console.log(...)"
console.log(${1})
endsnippet

snippet cle "console.error(...)"
console.error(${1})
endsnippet

# React & JSX
snippet "rcl(ass)?" "React Class" br
type Props = {
	children: React.Node,
}

export class ${1:`!v expand('%:t:r')`} extends React.Component<Props> {
	render() {
		return (
			<div className="$1">
				$3
			</div>
		)
	}
}
endsnippet

snippet rcc "React Class Component" b
/* @flow */
import * as React from 'react'

import './${2:$1}.scss'

type Props = {
	children: React.Node,
}

export class ${1:`!v expand('%:t:r')`} extends React.Component<Props> {
	render() {
		return (
			<div className="$1">
				$3
			</div>
		)
	}
}

export default $1
endsnippet

snippet rccc "React Redux Class Component" b
/* @flow */
import * as React from 'react'
import { connect } from 'react-redux'

import './${2:$1}.scss'

type Props = {
	children: React.Node,
}

export class ${1:`!v expand('%:t:r')`} extends React.Component<Props> {
	render() {
		return (
			<div className="$1">
				$3
			</div>
		)
	}
}

const mapStateToProps = (state, props) {
	return {}
}

export default connect(mapStateToProps)($1)
endsnippet

snippet rfc "React Functional Component" b
/* @flow */
import React from 'react'

import './${2:$1}.scss'

type Props = {
}

export const ${1:`!v expand('%:t:r')`} = (${3:{ ...props }: Props}) => (
	<div className="$1">
		$5
	</div>
)

export default $1
endsnippet

# Component Lifecycle
snippet cwm "React componentWillMount" b
componentWillMount() {
	$1
}
endsnippet

snippet cdm "React componentDidMount" b
componentDidMount() {
	$1
}
endsnippet

snippet cwrp "React componentWillReceiveProps" b
componentWillReceiveProps(nextProps) {
	$1
}
endsnippet

snippet scup "React shouldComponentUpdate" b
shouldComponentUpdate(nextProps, nextState) {
	$1
}
endsnippet

snippet cwup "React componentWillUpdate" b
componentWillUpdate(nextProps, nextState) {
	$1
}
endsnippet

snippet cdup "React componentDidUpdate" b
componentDidUpdate(prevProps, prevState) {
	$1
}
endsnippet

snippet cwu "Rreact componentWillUnmount" b
componentWillUnmount() {
	$1
}
endsnippet

snippet ren "React render"
render() {
	return ${1:(
		${2:<div>${3}</div>}
	);}
}
endsnippet
