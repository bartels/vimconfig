{
  // diagnostics
  "diagnostic.level": "warning",
  "diagnostic.errorSign": "✖",
  "diagnostic.warningSign": "⚠",
  "diagnostic.infoSign": "ℹ",

  // lists
  "list.height": 20,
  "list.nextKeymap": "<C-j>",
  "list.previousKeymap": "<C-k>",
  "list.normalMappings": {
    "<C-c>": "do:exit"
  },
  "list.insertMappings": {
    "<C-c>": "do:exit",
    "<C-n>": "normal:j",
    "<C-p>": "normal:k"
  },

  "codeLens.enable": false,

  // tsserver
  "tsserver.formatOnType": false,
  "tsserver.disableAutomaticTypeAcquisition": true,

  "javascript.format.enabled": false,
  "javascript.suggestionActions.enabled": false,
  "javascript.showUnused": false,
  "javascript.referencesCodeLens.enable": false,
  "javascript.implementationsCodeLens.enable": false,

  "typescript.format.enabled": false,
  "typescript.suggestionActions.enabled": false,
  "typescript.showUnused": false,
  "typescript.referencesCodeLens.enable": false,
  "typescript.implementationsCodeLens.enable": false,

  // eslint
  "eslint.autoFixOnSave": true,

  // python
  "python.jediEnabled": true,
  "python.linting.enabled": true,
  "python.linting.lintOnSave": false,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,

  // yaml
  "yaml.schemas": {
    "kubernetes": [
      // "*k8s/**/*.yaml",
      "*deployment*.yaml",
      "*service*.yaml",
      "*ingress.yaml",
      "*statefulset*.yaml",
      "*daemonset*.yaml",
      "*pdb*.yaml",
      "*pvc*.yaml",
      "*k8s/**/*patch*.yaml"
    ],

    // "https://raw.githubusercontent.com/threadheap/serverless-ide-vscode/master/packages/sam-schema/schema.json": [
    "https://raw.githubusercontent.com/awslabs/goformation/master/schema/sam.schema.json": [
      "template.yaml",
      "template.yml"
    ]
  },

  "yaml.customTags": [
      // cloudformation tags:
      "!Equals sequence",
      "!FindInMap sequence",
      "!GetAtt",
      "!GetAtt sequence",
      "!GetAZs",
      "!ImportValue",
      "!Join sequence",
      "!Ref",
      "!Select sequence",
      "!Split sequence",
      "!Sub",
      "!Base64 mapping"
  ],

  // snippets
  "snippets.userSnippetsDirectory": "~/.vim/UltiSnips",
  "snippets.extends": {
    "typescript": ["javascript"],
    "typescriptreact": ["javascriptreact"]
  },
  "snippets.enableStatusItem": false,

  // coc-diagnostics
  // "diagnostic-languageserver.debug": true,
  // "diagnostic-languageserver.trace.server": "verbose",

  "diagnostic-languageserver.filetypes": {
    "vim": "vint",
    "sh": "shellcheck",
    "python": "flake8",
    "javascriptreact": ["stylelint"],
    "typescriptreact": ["stylelint"],
    "css": "stylelint",
    "scss": "stylelint",
    "less": "stylelint"
  },

  "diagnostic-languageserver.linters": {
    "flake8": {
      "command": "flake8",
      "rootPatterns": [
        ".git"
      ],
      "debounce": 100,
      "args": [
        "--stdin-display-name",
        "%filepath",
        "-"
      ],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "flake8",
      "formatLines": 1,
      "formatPattern": [
        "^.+:(\\d+):(\\d+): (([^\\s]+) .*)$",
        {
          "line": 1,
          "column": 2,
          "security": 4,
          "message": 3
        }
      ]
    },
    "vint": {
      "command": "vint",
      "debounce": 100,
      "args": [
        "--enable-neovim",
        "--stdin-display-name",
        "%filepath",
        "-f",
        "'{file_path}:{line_number}:{column_number}:{severity}: {description} (see {reference})'",
        "-"
      ],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "vint",
      "formatLines": 1,
      "formatPattern": [
        "[^:]+:(\\d+):(\\d+):([^:]+):\\s*(.*$)",
        {
          "line": 1,
          "column": 2,
          "security": 3,
          "message": 4
        }
      ],
      "securities": {
        "error": "error",
        "warning": "warning",
        "style_problem": "warning"
      }
    },

    "shellcheck": {
      "command": "shellcheck",
      "debounce": 100,
      "args": [
        "--format=json",
        "--shell=bash",
        "--exclude=SC1090,SC2034",
        "-"
      ],
      "sourceName": "shellcheck",
      "parseJson": {
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${code}]",
        "security": "level"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "info": "warning",
        "style": "warning"
      }
    },
    "eslint_d": {
      "command": "eslint_d",
      "rootPatterns": [
        ".git"
      ],
      "debounce": 100,
      "args": [
        "--stdin",
        "--stdin-filename",
        "%filepath",
        "--format",
        "json"
      ],
      "sourceName": "eslint_d",
      "parseJson": {
        "errorsRoot": "[0].messages",
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${ruleId}]",
        "security": "severity"
      },
      "securities": {
        "2": "error",
        "1": "warning"
      }
    },
    "stylelint": {
      "command": "./node_modules/.bin/stylelint",
      "rootPatterns": [
        ".git"
      ],
      "debounce": 100,
      "args": [
        "--formatter",
        "json",
        "--stdin-filename",
        "%filepath"
      ],
      "sourceName": "stylelint",
      "parseJson": {
        "errorsRoot": "[0].warnings",
        "line": "line",
        "column": "column",
        "message": "${text}",
        "security": "severity"
      },
      "securities": {
        "error": "error",
        "warning": "warning"
      }
    }
  }
}
